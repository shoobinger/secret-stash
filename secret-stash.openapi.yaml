openapi: 3.0.3
info:
  title: Secret Notes API
  version: 1.0.0
  description: |
    An API for managing secret notes with expiration.

servers:
  - url: https://api.example.com/v1

paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /users/login:
    post:
      summary: Login user and obtain JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: JWT token issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtTokenResponse'
        '401':
          description: Invalid email or password
  /secret-notes:
    get:
      summary: List all secret notes
      responses:
        '200':
          description: A list of secret notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretNote'
    post:
      summary: Create a new secret note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretNoteCreateRequest'
      responses:
        '201':
          description: Secret note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretNote'

  /secret-notes/{id}:
    get:
      summary: Get a secret note by ID
      parameters:
        - $ref: '#/components/parameters/NoteId'
      responses:
        '200':
          description: The requested secret note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretNote'
        '404':
          description: Note not found
    put:
      summary: Update a secret note by ID
      parameters:
        - $ref: '#/components/parameters/NoteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretNoteUpdateRequest'
      responses:
        '200':
          description: Updated secret note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretNote'
        '404':
          description: Note not found
    delete:
      summary: Delete a secret note by ID
      parameters:
        - $ref: '#/components/parameters/NoteId'
      responses:
        '204':
          description: Note deleted successfully
        '404':
          description: Note not found

components:
  parameters:
    NoteId:
      name: id
      in: path
      required: true
      description: UUID of the secret note
      schema:
        type: string
        format: uuid

  schemas:
    UserRegistrationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    JwtTokenResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT access token
    SecretNote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        expiresAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - title
        - content
        - createdAt

    SecretNoteCreateRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        expiresAt:
          type: string
          format: date-time
          nullable: true
      required:
        - title
        - content

    SecretNoteUpdateRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        expiresAt:
          type: string
          format: date-time
          nullable: true
      required:
        - title
        - content
